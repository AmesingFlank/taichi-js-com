"use strict";(self.webpackChunktaichi_js_com=self.webpackChunktaichi_js_com||[]).push([[4038],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>g});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),u=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},c=function(e){var t=u(e.components);return n.createElement(l.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),p=u(r),m=a,g=p["".concat(l,".").concat(m)]||p[m]||d[m]||o;return r?n.createElement(g,i(i({ref:t},c),{},{components:r})):n.createElement(g,i({ref:t},c))}));function g(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[p]="string"==typeof e?e:a,i[1]=s;for(var u=2;u<o;u++)i[u]=r[u];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},7384:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>u});var n=r(7462),a=(r(7294),r(3905));const o={sidebar_position:2,title:"Textures"},i=void 0,s={unversionedId:"docs/rendering/textures",id:"docs/rendering/textures",title:"Textures",description:"Textures are an important concept in computer graphics. They are images that come with hardware-accelerated sampling and filtering, and can be used to add details to 3D geometry. This page documents texture support in taichi.js.",source:"@site/docs/docs/3-rendering/2-textures.md",sourceDirName:"docs/3-rendering",slug:"/docs/rendering/textures",permalink:"/docs/docs/rendering/textures",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/docs/3-rendering/2-textures.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,title:"Textures"},sidebar:"tutorialSidebar",previous:{title:"Render Pipelines",permalink:"/docs/docs/rendering/render-pipelines"},next:{title:"Rendering Built-in Functions",permalink:"/docs/docs/rendering/rendering-builtin-functions"}},l={},u=[{value:"Creating Textures",id:"creating-textures",level:2},{value:"Loading Texture from An Image",id:"loading-texture-from-an-image",level:2},{value:"Sampling from a Texture",id:"sampling-from-a-texture",level:2},{value:"3D Textures",id:"3d-textures",level:2},{value:"Cubemaps",id:"cubemaps",level:2},{value:"Depth Textures",id:"depth-textures",level:2},{value:"Storage Textures",id:"storage-textures",level:2}],c={toc:u},p="wrapper";function d(e){let{components:t,...r}=e;return(0,a.kt)(p,(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Textures are an important concept in computer graphics. They are images that come with hardware-accelerated sampling and filtering, and can be used to add details to 3D geometry. This page documents texture support in ",(0,a.kt)("inlineCode",{parentName:"p"},"taichi.js"),"."),(0,a.kt)("p",null,"For examples of complete ",(0,a.kt)("inlineCode",{parentName:"p"},"taichi.js")," programs that make use of textures, see"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://taichi-js.com/playground/fractal-on-cloth"},"Fractal Cloth"))),(0,a.kt)("h2",{id:"creating-textures"},"Creating Textures"),(0,a.kt)("p",null,"A standard 2D texture with RGBA components can be created using"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"let texture = ti.texture(4, [width, height])\n")),(0,a.kt)("p",null,"The argument 4 specifies the amount of components in each texel. You can also pass 1 here for red-only, or 2 for red and green only."),(0,a.kt)("h2",{id:"loading-texture-from-an-image"},"Loading Texture from An Image"),(0,a.kt)("p",null,"You can create an image from either an ",(0,a.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/API/ImageBitmap"},(0,a.kt)("inlineCode",{parentName:"a"},"ImageBitmap")),", an ",(0,a.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/API/HTMLImageElement"},(0,a.kt)("inlineCode",{parentName:"a"},"HTMLImageElement")),", or simply from an url of the image. You can use these APIs:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"let texture = await ti.Texture.createFromBitmap(bitmap)\nlet texture = await ti.Texture.createFromHtmlImage(htmlImageElement)\nlet texture = await ti.Texture.createFromURL(url)\n")),(0,a.kt)("h2",{id:"sampling-from-a-texture"},"Sampling from a Texture"),(0,a.kt)("p",null,"Given a texture object, you can sample from it in a kernel:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"let texel = ti.textureSample(tex, texCoords)\n")),(0,a.kt)("p",null,"Here, the first argument is the texture object itself (either exposed to kernel scope via ",(0,a.kt)("inlineCode",{parentName:"p"},"ti.addToKernelScope(..)")," or passed as ",(0,a.kt)("inlineCode",{parentName:"p"},"ti.template()")," argument). The 2nd argument is the texture coordinates, which should be a 2D vector for 2D textures, or a 3D vector for 3D textures and cubemaps."),(0,a.kt)("h2",{id:"3d-textures"},"3D Textures"),(0,a.kt)("h2",{id:"cubemaps"},"Cubemaps"),(0,a.kt)("h2",{id:"depth-textures"},"Depth Textures"),(0,a.kt)("h2",{id:"storage-textures"},"Storage Textures"))}d.isMDXComponent=!0}}]);